---
import { actions, isInputError } from "astro:actions";
import { SEO } from "astro-seo";
import { RECAPTCHA_SITE_KEY } from "astro:env/client";
import isEmpty from "lodash/isEmpty";
import Layout from "@layouts/Layout.astro";
import Hero from "@components/ui/Hero.astro";
import WebsiteStructuredData from "@components/seo/WebsiteStructuredData.astro";
import CheckIcon from "@components/ui/icons/check-line.svg";
import ErrorIcon from "@components/ui/icons/error-warning-line.svg";

import HeroImage from "@assets/home-page-hero.webp";

export const prerender = false;
const result = Astro.getActionResult(actions.contactMe);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<Layout title="Contact Me ðŸ¤™">
  <WebsiteStructuredData slot="structured-data" />
  <SEO
    slot="seo"
    description="Danyal Lakzian's personal website. COntact me if you want to chat"
    openGraph={{
      basic: {
        title: "Contact Danyal Lakzian",
        type: "website",
        image: HeroImage.src,
        url: "https://lakzian.com/contact",
      },
    }}
  />
  <script slot="head" is:inline src="https://www.google.com/recaptcha/api.js"
  ></script>

  <Hero
    heading="Time to geek out ðŸ¤–"
    subHeading="Ready to geek out? Send me a message and let's code like there's no tomorrow!"
  />

  <section>
    <div class="max-w-4xl w-full mx-auto px-4 mt-10">
      {
        result && !result.error && (
          <div role="alert" class="alert alert-success">
            <CheckIcon class="w-5" />
            <span>Message sent ðŸŽ‰</span>
          </div>
        )
      }
      {
        (!isEmpty(Object.keys(inputErrors)) || result?.error) && (
          <div role="alert" class="alert alert-error">
            <ErrorIcon class="w-5" />
            <span>Oops! Error ðŸ˜¬</span>
          </div>
        )
      }
      {
        inputErrors?.["g-recaptcha-response"] && (
          <div role="alert" class="alert alert-error">
            <ErrorIcon class="w-5" />
            <span>Uh-oh! It looks like you're a robot in disguise. ðŸ¤–</span>
          </div>
        )
      }
      <form
        class="grid md:grid-cols-2 grid-cols-1 gap-3 mt-5"
        method="POST"
        action={actions.contactMe}
      >
        <label class="form-control w-full">
          <div class="label">
            <span class="label-text">What should I call you?</span>
          </div>
          <input
            transition:persist
            type="text"
            name="name"
            class="input input-bordered w-full"
            placeholder="John"
            aria-describedby="name-error"
          />
          <div class="label">
            {
              inputErrors.name && (
                <span id="name-error" class="label-text-alt text-error">
                  {inputErrors.name.join(",")}
                </span>
              )
            }
          </div>
        </label>
        <label class="form-control w-full">
          <div class="label">
            <span class="label-text">Give us you email?</span>
            <span class="label-text text-xs">Your email is safe with me ðŸ˜ˆ</span
            >
          </div>
          <input
            transition:persist
            type="email"
            name="email"
            class="input input-bordered w-full"
            placeholder="john@doe.com"
            aria-describedby="email-error"
          />
          <div class="label">
            {
              inputErrors.email && (
                <span id="email-error" class="label-text-alt text-error">
                  {inputErrors.email.join(",")}
                </span>
              )
            }
          </div>
        </label>

        <label class="form-control col-span-full">
          <div class="label">
            <span class="label-text">Let it out</span>
          </div>
          <textarea
            transition:persist
            name="message"
            class="textarea textarea-bordered h-24"
            placeholder="Message"
            maxlength="300"
            aria-describedby="message-error"></textarea>
          <div class="label">
            {
              inputErrors.message && (
                <span id="message-error" class="label-text-alt text-error">
                  {inputErrors.message.join(",")}
                </span>
              )
            }
            <span
              id="message-textarea-counter"
              class="label-text-alt text-xs text-neutral-content"
            >
              0/300 characters
            </span>
          </div>
        </label>
        <div class="flex justify-end col-span-full">
          <button
            data-sitekey={RECAPTCHA_SITE_KEY}
            data-callback="onSubmit"
            data-action="submit"
            class="g-recaptcha btn btn-primary w-full md:max-w-xs"
          >
            Send
          </button>
        </div>
      </form>
    </div>
  </section>

  <section class="h-96"></section>
</Layout>

<script is:inline>
  async function onSubmit(token) {
    document.querySelector("form").submit();
  }
</script>

<script>
  import isNil from "lodash/isNil";

  const textarea = document.querySelector('textarea[name="message"]');
  const counterElm = document.querySelector(
    "#message-textarea-counter"
  ) as HTMLSpanElement;

  if (!isNil(textarea) && !isNil(counterElm)) {
    textarea.addEventListener("input", function (e) {
      const target = e.target as HTMLTextAreaElement;
      const value = target.value;
      counterElm.innerHTML = `${value.length}/300 characters`;
      console.log("value: ", value);
    });
  }
</script>
